democratic-csi:
  # Default values for democratic-csi.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.

  nameOverride: ""
  fullnameOverride: ""

  extraCaCerts:
  #extraCaCerts: |-
  #  -----BEGIN CERTIFICATE-----
  #  ...
  #  -----END CERTIFICATE-----
  #  -----BEGIN CERTIFICATE-----
  #  ...
  #  -----END CERTIFICATE-----

  driver:
    # see the driver-config-secret.yaml for syntax
    # NOTE: if setting an existing secret you must still set `driver.config.driver`
    # to the corresponding value that you place in the secret as the value is used
    # by the chart for other purposes beyond secret creation
    existingConfigSecret:
    config:
      # please see the most up-to-date example of the corresponding config here:
      # https://github.com/democratic-csi/democratic-csi/tree/master/examples
      driver: freenas-api-nfs
      instance_id:
      httpConnection:
        protocol: http
        host: 192.168.1.192
        port: 80
        # use only 1 of apiKey or username/password
        # if both are present, apiKey is preferred
        # apiKey is only available starting in TrueNAS-12
        apiKey: 1-NVR0gYKNJ9ewj2LWhSoy0dzdHkLAg2Xn9XkeNCv1jlLtMLZUwsprwd9IpkJS8jep
        #username: root
        #password:
        allowInsecure: true
        # use apiVersion 2 for TrueNAS-12 and up (will work on 11.x in some scenarios as well)
        # leave unset for auto-detection
        #apiVersion: 2
      zfs:
        # can be used to override defaults if necessary
        # the example below is useful for TrueNAS 12
        #cli:
        #  sudoEnabled: true
        #
        #  leave paths unset for auto-detection
        #  paths:
        #    zfs: /usr/local/sbin/zfs
        #    zpool: /usr/local/sbin/zpool
        #    sudo: /usr/local/bin/sudo
        #    chroot: /usr/sbin/chroot
        
        # can be used to set arbitrary values on the dataset/zvol
        # can use handlebars templates with the parameters from the storage class/CO
        #datasetProperties:
        #  "org.freenas:description": "{{ parameters.[csi.storage.k8s.io/pvc/namespace] }}/{{ parameters.[csi.storage.k8s.io/pvc/name] }}"
        #  "org.freenas:test": "{{ parameters.foo }}"
        #  "org.freenas:test2": "some value"
      
        datasetParentName: storage/k8s/nfs/volumes
        # do NOT make datasetParentName and detachedSnapshotsDatasetParentName overlap
        # they may be siblings, but neither should be nested in the other
        # do NOT comment this option out even if you don't plan to use snapshots, just leave it with dummy value
        detachedSnapshotsDatasetParentName: storage/k8s/nfs/snapshots
        datasetEnableQuotas: true
        datasetEnableReservation: false
        datasetPermissionsMode: "0777"
        datasetPermissionsUser: 0
        datasetPermissionsGroup: 0
      
        # not supported yet
        #datasetPermissionsAcls:
        #- "-m everyone@:full_set:allow"
        #- "-m u:kube:full_set:allow"
      
      nfs:
        #shareCommentTemplate: "{{ parameters.[csi.storage.k8s.io/pvc/namespace] }}-{{ parameters.[csi.storage.k8s.io/pvc/name] }}"
        shareHost: 192.168.1.192
        shareAlldirs: false
        shareAllowedHosts: []
        shareAllowedNetworks: []
        shareMaprootUser: root
        shareMaprootGroup: root
        shareMapallUser: ""
        shareMapallGroup: ""

  # https://kubernetes-csi.github.io/docs/csi-driver-object.html
  csiDriver:
    # should be globally unique for a given cluster
    name: "org.democratic-csi.nfs"
    version: 1.5.0
    # create the kubernetes CSIDriver
    enabled: true
    attachRequired: true
    podInfoOnMount: true
    # https://kubernetes-csi.github.io/docs/support-fsgroup.html
    # k8s 1.19+ (ignored otherwise)
    # None|File|ReadWriteOnceWithFSType
    # fsGroupPolicy: ReadWriteOnceWithFSType
    
    # k8s 1.16+
    # volumeLifecycleModes: []
    
    # k8s 1.20+
    # tokenRequests: []

    # k8s 1.20+
    # requiresRepublish: false

    # k8s 1.19+
    # storageCapacity: false

  controller:
    enabled: true
    rbac:
      enabled: true
      openshift:
        # set to true if running on openshift *and* you have need
        # ie: hostNetwork, hostIPC, etc are turned on
        privileged: false
    replicaCount: 1
    hostNetwork: false
    hostAliases: []
    hostIPC: false
    podAnnotations: {}
    podLabels: {}
    priorityClassName: ""
    
    # deployment = deploy controller parts in a distinct deployment
    # node       = deploy controller as sidecars with node daemonset
    strategy: deployment

    # https://kubernetes-csi.github.io/docs/external-attacher.html
    externalAttacher:
      enabled: true
      image: registry.k8s.io/sig-storage/csi-attacher:v4.4.0
      args:
      - --v=5
      - --leader-election
      - --leader-election-namespace={{ .Release.Namespace }}
      - --timeout=90s
      - --worker-threads=10
      - --csi-address={{ .csiSocketAddress }}
      # if you do not want to completely override the defaults use this
      extraArgs: []
      resources:

    # https://kubernetes-csi.github.io/docs/external-provisioner.html
    externalProvisioner:
      enabled: true
      image: registry.k8s.io/sig-storage/csi-provisioner:v3.6.0
      args:
      - --v=5
      - --leader-election
      - --leader-election-namespace={{ .Release.Namespace }}
      - --timeout=90s
      - --worker-threads=10
      - --extra-create-metadata
      - --csi-address={{ .csiSocketAddress }}
      # if you do not want to completely override the defaults use this
      extraArgs: []
      resources:

    # https://kubernetes-csi.github.io/docs/external-resizer.html
    externalResizer:
      enabled: true
      image: registry.k8s.io/sig-storage/csi-resizer:v1.8.0
      args:
      - --v=5
      - --leader-election
      - --leader-election-namespace={{ .Release.Namespace }}
      - --timeout=90s
      - --workers=10
      - --csi-address={{ .csiSocketAddress }}
      # if you do not want to completely override the defaults use this
      extraArgs: []
      resources:

    # https://kubernetes-csi.github.io/docs/external-snapshotter.html
    externalSnapshotter:
      enabled: true
      # 1.20+ should use v4.0.0+
      # READ *before* updating from beta https://github.com/kubernetes-csi/external-snapshotter#usage
      image: registry.k8s.io/sig-storage/csi-snapshotter:v6.2.2
      args:
      - --v=5
      - --leader-election
      - --leader-election-namespace={{ .Release.Namespace }}
      - --timeout=90s
      - --worker-threads=10
      - --csi-address={{ .csiSocketAddress }}
      # if you do not want to completely override the defaults use this
      extraArgs: []
      resources:

    # https://github.com/kubernetes-csi/external-health-monitor
    externalHealthMonitorController:
      enabled: false
      image: registry.k8s.io/sig-storage/csi-external-health-monitor-controller:v0.10.0
      args:
      - --v=5
      - --leader-election
      - --leader-election-namespace={{ .Release.Namespace }}
      - --timeout=90s
      - --worker-threads=10
      - --csi-address={{ .csiSocketAddress }}
      #- --enable-node-watcher
      #- --list-volumes-interval
      # if you do not want to completely override the defaults use this
      extraArgs: []
      resources:

    # https://kubernetes-csi.github.io/docs/cluster-driver-registrar.html
    # not implemented, likely uncessary at this point
    clusterDriverRegistrar:
      enabled: false

    livenessProbe:
      enabled: true

    # democratic-csi controller
    driver:
      enabled: true
      image: docker.io/democraticcsi/democratic-csi:latest
      # imagePullPolicy: Always
      logLevel: info
      lifecycle:
  #      postStart:
  #        exec:
  #          command: ["/bin/sh", "-c", "echo Hello from the postStart handler > /usr/share/message"]
  #      preStop:
  #        exec:
  #          command: ["/bin/sh","-c","nginx -s quit; while killall -0 nginx; do sleep 1; done"]

      securityContext:
  #      allowPrivilegeEscalation: true
  #      capabilities:
  #        add:
  #        - SYS_ADMIN
  #      privileged: true

      resources:
      extraEnv: []
      extraVolumeMounts: []
  #    - name: foo
  #      mountPath: /foo

    extraVolumes: []
  #  - name: foo
  #    hostPath:
  #      path: /dev
  #      type: Directory

    nodeSelector: {}

    tolerations: []

    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
              - k3s-w01
              - k3s-w02
              - k3s-w03

  node:
    # windows support
    windows:
      enabled: false
    rbac:
      enabled: true
      openshift:
        # set to true if running on openshift
        privileged: false
    enabled: true
    hostNetwork: true
    hostAliases: []
    hostIPC: true
    hostPID: false
    kubeletHostPath: /var/lib/kubelet
    podAnnotations: {}
    podLabels: {}
    priorityClassName: ""

    livenessProbe:
      enabled: true

    cleanup:
      image: docker.io/busybox:1.32.0

    # democratic-csi node
    driver:
      enabled: true
      image: docker.io/democraticcsi/democratic-csi:latest
      # imagePullPolicy: Always
      logLevel: info
      # set path to null if your OS has no localtime file
      # RancherOS, openshift, etc 
      localtimeHostPath: /etc/localtime
      lifecycle:
  #      postStart:
  #        exec:
  #          command: ["/bin/sh", "-c", "echo Hello from the postStart handler > /usr/share/message"]
  #      preStop:
  #        exec:
  #          command: ["/bin/sh","-c","nginx -s quit; while killall -0 nginx; do sleep 1; done"]

      resources:
      extraEnv: []
      extraVolumeMounts: []
  #    - name: foo
  #      mountPath: /foo
    
      iscsiDirHostPath: /etc/iscsi
      iscsiDirHostPathType: Directory
    # https://kubernetes-csi.github.io/docs/node-driver-registrar.html
    driverRegistrar:
      enabled: true
      image: registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.9.0
      args:
      - --v=5
      - --csi-address={{ .csiSocketAddress }}
      - --kubelet-registration-path={{ .Values.node.kubeletHostPath }}/plugins/{{ .Values.csiDriver.name }}/csi.sock
      # if you do not want to completely override the defaults use this
      extraArgs: []
      resources:

    extraVolumes: []
  #  - name: foo
  #    hostPath:
  #      path: /dev
  #      type: Directory

    nodeSelector: {}

    tolerations: []

    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
              - k3s-w01
              - k3s-w02
              - k3s-w03

  # add note here about volume expansion requirements
  storageClasses:
  - name: truenas-nfs
    defaultClass: false
    reclaimPolicy: Delete
    volumeBindingMode: Immediate
    allowVolumeExpansion: true
    parameters:
      # for block-based storage can be ext3, ext4, xfs
      # for nfs should be nfs
      fsType: nfs
        
      # if true, volumes created from other snapshots will be
      # zfs send/received instead of zfs cloned
      # detachedVolumesFromSnapshots: "false"
      
      # if true, volumes created from other volumes will be
      # zfs send/received instead of zfs cloned
      # detachedVolumesFromVolumes: "false"

    mountOptions:
    - noatime
    - nfsvers=3
    secrets:
      provisioner-secret:
      controller-publish-secret:
      node-stage-secret:
      node-publish-secret:
      controller-expand-secret:

  # if your cluster supports snapshots you may enable below
  volumeSnapshotClasses: []
  # - name: nfs
  #   parameters:
  #     detachedSnapshots: "true"
  #- name: freenas-nfs-csi
  #  parameters:
  #  # if true, snapshots will be created with zfs send/receive
  #  # detachedSnapshots: "false"
  #  secrets:
  #    snapshotter-secret:

  # this is a temporary measure until all the k8s components are proper
  # grpc clients and send valid :authority headers
  # required to remove the deprecated/custom `grpc-uds` package with
  #`@grpc/grpc-js` and subsequently pave the way for updating `nodejs` to current
  # versions
  #
  # https://github.com/democratic-csi/csi-grpc-proxy
  csiProxy:
    enabled: true
    image: docker.io/democraticcsi/csi-grpc-proxy:v0.5.3
    resources:

  # Configure a pod security policy to allow privileged pods
  enablePSP: false
